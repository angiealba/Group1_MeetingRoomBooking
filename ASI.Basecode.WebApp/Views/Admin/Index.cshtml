@model IEnumerable<ASI.Basecode.Data.Models.User>
@using Microsoft.AspNetCore.Mvc.ModelBinding

@{
	var currentPage = ViewBag.CurrentPage ?? 1;
	var totalPages = ViewBag.TotalPages ?? 1;
	var searchQuery = ViewBag.SearchQuery ?? string.Empty;
}
<br />

<h1 class="fw-bold mb-3">Admin Management</h1>
<div class="d-flex justify-content-between align-items-center mb-3">
	<button class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#createUserModal">Add New Admin</button>
	<form class="d-flex" method="GET">
		<input class="form-control me-2" type="search" placeholder="Search admins" aria-label="Search" name="search" value="@searchQuery">
		<button class="btn btn-outline-dark" type="submit">Search</button>
	</form>
</div>

@if (!ViewData.ModelState.IsValid)
{
	<div class="alert alert-danger">
		<ul>
			@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
			{
				<li>@error.ErrorMessage</li>
			}
		</ul>
	</div>
}

<div class="table-responsive">
	<table class="table table-striped mt-3 align-middle">
		<thead>
			<tr>
				<th>Username</th>
				<th>Name</th>
				<th>Email</th>
				<th>Created Time</th>
				<th class="action-column">Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var user in Model.Where(u => u.role == "Admin"))
			{
				<tr>
					<td>@user.userID</td>
					<td>@user.name</td>
					<td>@user.email</td>
					<td>@user.createdTime</td>
					<td>
						<button type="button" class="btn btn-sm btn-outline-dark" data-toggle="modal" data-target="#editUserModal-@user.ID">
							Edit
						</button>
						<button type="button" class="btn btn-sm btn-danger" data-toggle="modal" data-target="#deleteUserModal-@user.ID">
							Delete
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>

<ul class="pagination justify-content-center">
	@if (currentPage > 1)
	{
		<li class="page-item">
			<a class="page-link" href="?page=@(currentPage - 1)&search=@searchQuery" aria-label="Previous">
				<span aria-hidden="true">&laquo;</span>
			</a>
		</li>
	}
	@for (int i = 1; i <= totalPages; i++)
	{
		<li class="page-item @(i == currentPage ? "active" : "")">
			<a class="page-link" href="?page=@i&search=@searchQuery">@i</a>
		</li>
	}
	@if (currentPage < totalPages)
	{
		<li class="page-item">
			<a class="page-link" href="?page=@(currentPage + 1)&search=@searchQuery" aria-label="Next">
				<span aria-hidden="true">&raquo;</span>
			</a>
		</li>
	}
</ul>
</nav>

<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="createUserModalLabel">Add New Admin</h5>
				<button type="button" class="btn" data-bs-dismiss="modal" aria-label="Close"><i class="bi bi-x-lg"></i></button>
			</div>
			<form id="createUserForm" asp-action="Register" method="post">
				<div class="modal-body">
					@Html.AntiForgeryToken()
					<!-- Show validation error messages -->
					@if (!ViewData.ModelState.IsValid)
					{
						<div class="alert alert-danger">
							<ul>
								@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
								{
									<li>@error.ErrorMessage</li>
								}
							</ul>
						</div>
					}

					<div class="mb-3">
						<label for="userIDCreate" class="form-label">Username</label>
						<input type="text" class="form-control" id="userID" name="userID" value="@ViewBag.UserViewModel?.userID" required>
					</div>

					<div class="mb-3">
						<label for="NameCreate" class="form-label">Name</label>
						<input type="text" class="form-control" id="name" name="name" value="@ViewBag.UserViewModel?.name" required>
					</div>
					<div class="mb-3">
						<label for="EmailCreate" class="form-label">Email</label>
						<input type="email" class="form-control" id="email" name="email" value="@ViewBag.UserViewModel?.email" required>
					</div>

					<div class="mb-3">
						<label for="PasswordCreate" class="form-label">Password</label>
						<input type="password" class="form-control" id="password" name="password" required>
					</div>

					<div class="mb-3">
						<label for="ConfirmPasswordCreate" class="form-label">Confirm Password</label>
						<input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
						<div id="passwordMismatchError" class="text-danger" style="display: none;">Passwords do not match!</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="reset" class="btn btn-secondary" id="cancelBtn" data-bs-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-success">Add Admin</button>
				</div>
			</form>
		</div>
	</div>
</div>

<script>
	document.getElementById("createUserForm").addEventListener("submit", function (event) {
		var password = document.getElementById("password").value;
		var confirmPassword = document.getElementById("confirmPassword").value;

		if (password !== confirmPassword) {

			event.preventDefault();

			document.getElementById("passwordMismatchError").style.display = "block";
		} else {
			document.getElementById("passwordMismatchError").style.display = "none";
		}
	});
</script>


<!-- Edit User Modal -->
@foreach (var user in Model)
{
	<div class="modal fade" id="editUserModal-@user.ID" tabindex="-1" aria-labelledby="editUserModalLabel-@user.ID" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="editUserModalLabel-@user.ID">Edit Admin</h5>
					<button type="button" class="btn" data-dismiss="modal" aria-label="Close"><i class="bi bi-x-lg"></i></button>
				</div>
				<form id="editUserForm-@user.ID" asp-action="EditUser" method="post">
					<div class="modal-body">
						@Html.AntiForgeryToken()
						<input type="hidden" name="Id" value="@user.ID" />
						<div class="mb-3">
							<label for="userIDEdit-@user.ID" class="form-label">Username</label>
							<input type="text" class="form-control" id="userIDEdit-@user.ID" name="userID" value="@user.userID" disabled>
						</div>
						<div class="mb-3">
							<label for="nameEdit-@user.ID" class="form-label">Name</label>
							<input type="text" class="form-control" id="NameEdit-@user.ID" name="name" value="@user.name" readonly>
						</div>
						<div class="mb-3">
							<label for="EmailEdit-@user.ID" class="form-label">Email</label>
							<input type="email" class="form-control" id="EmailEdit-@user.ID" name="Email" value="@user.email" required>
						</div>
						<div class="mb-3">
							<label for="PasswordEdit-@user.ID" class="form-label">Password</label>
							<input type="password" class="form-control" id="PasswordEdit-@user.ID" name="Password" placeholder="Leave blank to keep existing password">
						</div>
						<div class="mb-3">
							<label for="ConfirmPasswordEdit-@user.ID" class="form-label">Confirm Password</label>
							<input type="password" class="form-control" id="ConfirmPasswordEdit-@user.ID" name="ConfirmPassword" placeholder="Leave blank to keep existing password">
							<div id="passwordMismatchError-@user.ID" class="text-danger" style="display: none;">Passwords do not match!</div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="reset" class="btn btn-secondary" id="cancelBtn" data-bs-dismiss="modal">Cancel</button>
						<button type="submit" class="btn btn-success">Update Admin</button>
					</div>
				</form>
			</div>
		</div>
	</div>

	<script>
		document.getElementById("editUserForm-@user.ID").addEventListener("submit", function (event) {
			var password = document.getElementById("PasswordEdit-@user.ID").value;
			var confirmPassword = document.getElementById("ConfirmPasswordEdit-@user.ID").value;

			// Make sure Confirm Password is required if Password is filled
			if (password && confirmPassword === "") {
				event.preventDefault();
				document.getElementById("passwordMismatchError-@user.ID").style.display = "block";
				document.getElementById("passwordMismatchError-@user.ID").innerText = "Please confirm your password.";
				return;
			}

			// Check if passwords match, show error if not
			if (password !== confirmPassword && password !== "" && confirmPassword !== "") {
				event.preventDefault();
				document.getElementById("passwordMismatchError-@user.ID").style.display = "block";
				document.getElementById("passwordMismatchError-@user.ID").innerText = "Passwords do not match!";
			} else {
				document.getElementById("passwordMismatchError-@user.ID").style.display = "none";
			}
		});
	</script>

}

<!-- Delete User Modal -->
@foreach (var user in Model)
{
	<div class="modal fade" id="deleteUserModal-@user.ID" tabindex="-1" role="dialog" aria-labelledby="deleteUserModalLabel-@user.ID" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="deleteUserModalLabel-@user.ID">Delete Admin</h5>
					<button type="button" class="btn" data-bs-dismiss="modal" aria-label="Close"><i class="bi bi-x-lg"></i></button>
				</div>
				<form asp-action="DeleteUser" method="post">
					<div class="modal-body">
						<input type="hidden" name="Id" value="@user.ID" />
						<p>Are you sure you want to delete this admin?</p>
						<p><strong>Admin Details:</strong></p>
						<p>
							Username: @user.userID <br />
							Name: @user.name <br />
							Email: @user.email <br />
						</p>

					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
						<button type="submit" class="btn btn-danger">Delete</button>
					</div>
				</form>
			</div>
		</div>
	</div>
}
